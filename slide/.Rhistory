mod2$SDF$localR2
bw1 <- gwr.sel(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel,
coords = coordinates(datamodel),
longlat = TRUE,
adapt=FALSE
)
bw1
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
bandwidth = bw1
)
mod2
summary(mod2)
mod2$SDF$localR2
summary(mod2)
mod2
mod2$SDF$localR2
mod2$SDF$localR2
summary(mod2)
mod2
?gwr
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
bandwidth = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
adapt = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
adapt = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
bandwidth = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
mod2)
mod2
model_reg
summary(model_reg)
mod2
# Maps --------------------------------------------------------------------
results <-as.data.frame(gwr.model$SDF)
# Maps --------------------------------------------------------------------
results <-as.data.frame(mod2$SDF)
names(results)
gwr.map <- cbind(spdata, as.matrix(results))
as.matrix(results)
spdata
cbind(spdata, as.matrix(results))
mod2$SDF$localR2
spdata
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones)
datamodel
spdata <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
select(IDDIST,anio)
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
bw1 <- gwr.sel(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel,
coords = coordinates(datamodel),
longlat = TRUE,
adapt=FALSE
)
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
bandwidth = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
select(IDDIST)
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
bw1 <- gwr.sel(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel,
coords = coordinates(datamodel),
longlat =TRUE,
adapt=FALSE
)
mod2 <- gwr(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel@data,
coords = coordinates(datamodel),
bandwidth = bw1,
hatmatrix=TRUE,
se.fit=TRUE
)
summary(mod2)
mod2$SDF$localR2
spdata <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
select(IDDIST,anio)
gwr.map <- cbind(spdata, as.matrix(results))
gwr.map
gwr.map2 <- st_as_sf(gwr.map)
library(tmap)
gwr.map
qtm(gwr.map, fill = "localR2") +
tm_facets(by = anio)
qtm(gwr.map, fill = "localR2") +
tm_facets(by = anio)
qtm(gwr.map, fill = "localR2")
# Reading spatial data ----------------------------------------------------
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL)
data <- read_csv('index_economics.csv') %>%
select(anio,DISTRITO,IDDIST,index_colocaciones) %>%
mutate(index_colocaciones = log(index_colocaciones+1))
finaldata <- left_join(
data,
spdata,
by = "IDDIST"
)
names_rm <- c("NOMBPROV","NOMBDEP","DCTO","LEY","FECHA",
"NOM_CAP","AREA_KM.","FEC_ACT","FUENTE","NOMBDIST")
finaldata <- finaldata %>%
select(-c(names_rm))
finaldata <- finaldata %>% mutate_all(replace_na,0)
# Models ------------------------------------------------------------------
model_reg <- lm(
formula = defmean~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = finaldata
)
summary(model_reg)
summary(model_reg)$coefficient
confint(model_reg)
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
select(IDDIST)
plot(st_geometry(spdata))
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
spplot(datamodel)
spplot(datamodel@polygons)
plot(datamodel@polygons)
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones)
plot(st_geometry(datamodel))
# Reading spatial data ----------------------------------------------------
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL)
spdata
# Reading spatial data ----------------------------------------------------
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL) %>%
drop_na()
plot(st_geometry(spadata))
plot(st_geometry(spdata))
spdata
# Reading spatial data ----------------------------------------------------
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
# st_set_geometry(NULL) %>%
drop_na()
plot(st_geometry(spdata))
# Reading spatial data ----------------------------------------------------
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL) %>%
drop_na()
data <- read_csv('index_economics.csv') %>%
select(anio,DISTRITO,IDDIST,index_colocaciones) %>%
mutate(index_colocaciones = log(index_colocaciones+1))
finaldata <- left_join(
spdata,
data,
by = "IDDIST"
)
names_rm <- c("NOMBPROV","NOMBDEP","DCTO","LEY","FECHA",
"NOM_CAP","AREA_KM.","FEC_ACT","FUENTE","NOMBDIST")
finaldata <- finaldata %>%
select(-c(names_rm))
finaldata <- finaldata %>% mutate_all(replace_na,0)
finaldata
library(spgwr)
st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL)
unique(finaldata$IDDIST)
unique(table(finaldata$IDDIST))
table(finaldata$IDDIST))
table(finaldata$IDDIST)
sum(table(finaldata$IDDIST))
st_read('GPKG/coeficientesv2.gpkg') %>%
st_set_geometry(NULL)
spdata <- st_read('GPKG/coeficientesv2.gpkg') %>%
select(IDDIST)
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones)
plot(st_geometry(datamodel))
datamodel <- left_join(spdata,finaldata,"IDDIST") %>%
drop_na(index_colocaciones) %>%
as('Spatial')
bw1 <- gwr.sel(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = datamodel,
coords = coordinates(datamodel),
longlat =TRUE,
adapt=FALSE
)
# Models ------------------------------------------------------------------
model_reg <- lm(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean,
data = finaldata
)
summary(model_reg)
# Models ------------------------------------------------------------------
model_reg <- lm(
formula = defmean ~ index_colocaciones + riomean +
viamean + cagmean + cpomean + slpmean + catmean + acrmean +
tpimean + demmean + anpmean + anio,
data = finaldata
)
summary(model_reg)
summary(model_reg)$coefficient
library(lis)
library(innovar)
data(Peru)
data("Peru")
Peru
data("migration17raw")
migration17raw
?migration17raw
library(rgee)
install.packages("echarts4r")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
remotes::install_github("JohnCoene/echarts4r")
devtools::install_github("JohnCoene/echarts4r")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
install.packages("~/Descargas/echarts4r-master.zip", repos = NULL, type = "win.binary")
install.packages("~/Descargas/echarts4r-master.zip", repos = NULL, type = "win.binary")
# install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r")
install.packages("echarts4r")
library(echarts4r)
library(echarts4r.assets)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
library(echarts4r)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
install.packages("tidyverse")
library(echarts4r)
library(tidyverse)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
library(tidyverse)
library(echarts4r)
library(tidyverse)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world topo"),
height.texture = ea_asset("elevation 4k")
)
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world topo"),
height.texture = ea_asset("elevation 4k")
)
#install.packages("remotes")
remotes::install_github("JohnCoene/echarts4r.assets")
library(echarts4r)
library(echarts4r.assets)
library(tidyverse)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world topo"),
height.texture = ea_asset("elevation 4k")
)
library(echarts4r)
library(echarts4r.assets)
library(tidyverse)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world topo"),
height.texture = ea_asset("elevation 4k")
)
library(echarts4r)
library(echarts4r.assets)
library(tidyverse)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world topo"),
height.texture = ea_asset("elevation 4k")
)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world night")
)
library(echarts4r)
#> Welcome to echarts4r
#>
#> Docs: echarts4r.john-coene.com
library(echarts4r.assets)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world night")
)
library(echarts4r)
library(echarts4r.assets)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
library(tidyverse)
library(echarts4r)
library(echarts4r.assets)
base <- e_charts() %>% # initialise
e_rm_axis("x") %>% # remove axis
e_rm_axis("y")
base %>%
e_globe(
environment = ea_asset("starfield"),
base_texture = ea_asset("world night")
)
setwd("~/Descargas/Template/Workshop-MasterGIS2021/slide")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(leaflet)
library(leaflet.extras)
library(sf)
library(fontawesome)
knitr::include_graphics("img/p1.png")
leaflet() %>%
addProviderTiles()
library(leafle)
library(leaflet)
leaflet() %>%
addProviderTiles()
leaflet() %>%
addTiles()
leaflet() %>%
addTiles()
leaflet() %>%
addTiles()
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 12)
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 12) %>%
addMarkers()
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 12) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056)
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 10) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056)
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056)
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups(popup = "<b>Holi</b>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056,popup = "<b>Holi</b>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups(popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups("<h2>Holi😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.0865366 ,lat =-12.0556056, zoom = 20) %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi 😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
setView(lng =-77.087 ,lat =-12.056, zoom = 15) %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi 😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi 😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
addMarkers(lng =-77.0865366 ,lat =-12.0556056) %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F)) %>%
setView(lng =-77.0865366 ,lat =-12.0556056,zoom = 20)
leaflet() %>%
addTiles() %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F)) %>%
setView(lng =-77.0865366 ,lat =-12.0556056,zoom = 20)
leaflet() %>%
addTiles() %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F)) %>%
setView(lng =-77.0865366 ,lat =-12.0556056,zoom = 10)
leaflet() %>%
addTiles() %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F))
leaflet() %>%
addTiles() %>%
addPopups(lng =-77.0865366 ,lat =-12.0556056, popup = "<h2>Holi😝 </h2>",options = popupOptions(closeButton = F)) %>%
setView(lng =-77.0865366 ,lat =-12.0556056,zoom = 18)
